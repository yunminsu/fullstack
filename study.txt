10월 13일
앞으로 남은 범위
callback함수
콜백지옥(callback hell)
promise async/await
Set, Map
optional chaining
try catch 에러 핸들링
다 끝나면 React 배움

10월 16일
10/17 평가 자바스크립트~es6차 10번까지



React
10월 19일
- 리액트의 이벤트는 소문자 onclick이 아니라 카멜케이스 onClick을 사용해야함
- 함수 호출 시 함수명() <- ()를 넣으면 바로 실행됨, ()를 없애야 클릭시 실행됨 
ex)
onClick={handleDelete()} 바로 실행 
onClick={handleDelete} 클릭 시 실행 

- State(비동기)를 동기적으로 사용하려면 콜백 함수로 실행 시켜야한다.

- 조건부 렌더링 3가지(if, &&, 삼항연산자) 
1. JSX 내에서는 if문 사용 불가하므로 삼항연산자(더 많이 사용)를 사용하거나 JS에서 사용해야 함


10월 20일
- package-lock.json, package.json 파일 2개만 있으면 npm install을 통해서 node_modules를 다운 가능(라이브러리가 추가될때 사용)
  git에 node_modules를 다 올리게 되면 파일이 방대해지기 때문


onClick 같은 속성 값은 함수로 전달하는 것을 권장

12월 15일
- 새로고침 없이 화면에 변경된 값 출력 하는 방법! (삭제 때)
예) DB에서 받은 게시물을 삭제 했을때 바로 화면에서 없어져야 될 때
1. 클릭 이벤트 핸들러 함수 안에 삭제 해달라고 post 요청을 보낸 뒤에 다시 삭제 된 DB의 data를(그냥 기존 꺼 다시 요청 하면 됨) get 요청을 받아서
   기존 state에(set함수) 다시 담아준다
   * 사용자들끼리 새로고침 없이 실시간으로 값이 변경되어야 할 때(예: 주식) 

2. 클릭 이벤트 핸들러 함수 안에 삭제 해달라고 post 요청을 보낸 뒤에 state를 불러와 filter를 써서( 예)state.id !== 클릭한 id ) 새 배열을 만들고
   그 값을 기존 state에(set함수) 다시 담아준다.
